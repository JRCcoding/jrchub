{"ast":null,"code":"var _jsxFileName = \"/home/jrccode/Dev/React/jrchub/frontend/src/Components/Posts.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport axios from 'axios';\nimport { Container } from 'react-bootstrap';\n\n// import { blogposts } from '../data.js'\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Posts = () => {\n  _s();\n  const [blogposts, setBlogposts] = useState();\n  useEffect(() => {\n    const fetchBlogposts = async () => {\n      const {\n        data\n      } = await axios.get('/api/blogposts');\n      setBlogposts(data);\n    };\n    fetchBlogposts();\n  });\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Blog Posts:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), blogposts && blogposts.map(blogpost => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"blogposts\",\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              children: blogpost.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: blogpost.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: blogpost.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 17\n          }, this)\n        }, blogpost, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(Posts, \"XOw4m22KhyBZyN76skUl4QXVl9M=\");\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","useState","useEffect","Row","Col","axios","Container","Posts","blogposts","setBlogposts","fetchBlogposts","data","get","map","blogpost","date","name","content"],"sources":["/home/jrccode/Dev/React/jrchub/frontend/src/Components/Posts.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Row, Col } from 'react-bootstrap'\nimport axios from 'axios'\nimport { Container } from 'react-bootstrap'\n\n// import { blogposts } from '../data.js'\n\nconst Posts = () => {\n  const [blogposts, setBlogposts] = useState()\n\n  useEffect(() => {\n    const fetchBlogposts = async () => {\n      const { data } = await axios.get('/api/blogposts')\n\n      setBlogposts(data)\n    }\n    fetchBlogposts()\n  })\n  return (\n    <Container>\n      <Container>\n        <div>\n          <h2>Blog Posts:</h2>\n          {blogposts &&\n            blogposts.map((blogpost) => (\n              <div className='blogposts' key={blogpost}>\n                <Row>\n                  <Col>{blogpost.date}</Col>\n                  <Col>{blogpost.name}</Col>\n                  <Col>{blogpost.content}</Col>\n                </Row>\n              </div>\n            ))}\n        </div>\n      </Container>\n    </Container>\n  )\n}\n\nexport default Posts\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,GAAG,EAAEC,GAAG,QAAQ,iBAAiB;AAC1C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,iBAAiB;;AAE3C;AAAA;AAEA,MAAMC,KAAK,GAAG,MAAM;EAAA;EAClB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,EAAE;EAE5CC,SAAS,CAAC,MAAM;IACd,MAAMQ,cAAc,GAAG,YAAY;MACjC,MAAM;QAAEC;MAAK,CAAC,GAAG,MAAMN,KAAK,CAACO,GAAG,CAAC,gBAAgB,CAAC;MAElDH,YAAY,CAACE,IAAI,CAAC;IACpB,CAAC;IACDD,cAAc,EAAE;EAClB,CAAC,CAAC;EACF,oBACE,QAAC,SAAS;IAAA,uBACR,QAAC,SAAS;MAAA,uBACR;QAAA,wBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAoB,EACnBF,SAAS,IACRA,SAAS,CAACK,GAAG,CAAEC,QAAQ,iBACrB;UAAK,SAAS,EAAC,WAAW;UAAA,uBACxB,QAAC,GAAG;YAAA,wBACF,QAAC,GAAG;cAAA,UAAEA,QAAQ,CAACC;YAAI;cAAA;cAAA;cAAA;YAAA,QAAO,eAC1B,QAAC,GAAG;cAAA,UAAED,QAAQ,CAACE;YAAI;cAAA;cAAA;cAAA;YAAA,QAAO,eAC1B,QAAC,GAAG;cAAA,UAAEF,QAAQ,CAACG;YAAO;cAAA;cAAA;cAAA;YAAA,QAAO;UAAA;YAAA;YAAA;YAAA;UAAA;QACzB,GALwBH,QAAQ;UAAA;UAAA;UAAA;QAAA,QAOzC,CAAC;MAAA;QAAA;QAAA;QAAA;MAAA;IACA;MAAA;MAAA;MAAA;IAAA;EACI;IAAA;IAAA;IAAA;EAAA,QACF;AAEhB,CAAC;AAAA,GA9BKP,KAAK;AAAA,KAALA,KAAK;AAgCX,eAAeA,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}